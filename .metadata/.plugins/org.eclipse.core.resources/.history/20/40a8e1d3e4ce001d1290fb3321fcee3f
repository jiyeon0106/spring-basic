package com.fastcampus.ch4.controller;

import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.fastcampus.ch4.domain.CommentDto;
import com.fastcampus.ch4.service.CommentService;

@Controller
public class CommentController {
	@Autowired
	CommentService service;
	
	// 댓글을 등록하는 메소드
	@ResponseBody
	@PostMapping("/comments") // /ch4/comments?bno=2435 POST
	public ResponseEntity<String> write(CommentDto dto, Integer bno, HttpSession session) {
//		String commenter = (String)session.getAttribute("id");
		String commenter = "asdf";
		dto.setCommenter(commenter);
		dto.setBno(bno);
		System.out.println("dto = " + dto);
		
		try {
			if(service.write(dto)!=1)
				throw new Exception("Write failed.");
			
			return new ResponseEntity<>("WRT_OK", HttpStatus.OK);
			
		} catch (Exception e) {
			e.printStackTrace();
			return new ResponseEntity<>("WRT_OK", HttpStatus.BAD_REQUEST);
		}
	}
	
	// 지정된 댓글을 삭제하는 메소드
	@DeleteMapping("/comments/{cno}") // DELETE /comments/1?bno=2435 <-- 삭제 할 댓글 번호
	@ResponseBody
	public ResponseEntity<String> remove(@PathVariable Integer cno, Integer bno, HttpSession session) {
//		String commenter = (String)session.getAttribute("id");
		String commenter = "asdf";
		
		
		try {
			int rowCnt = service.remove(cno, bno, commenter);
			
			if(rowCnt!=1)
				throw new Exception("Delete Failed");
			
			return new ResponseEntity<>("DEL_OK", HttpStatus.OK);
		} catch (Exception e) {
			e.printStackTrace();
			return new ResponseEntity<>("DEL_ERR", HttpStatus.BAD_REQUEST);
		}
	}

	// 지정된 게시물의 모든 댓글을 가져오는 메소드
	@GetMapping("/comments") // /comments?bno=1080 GET
	@ResponseBody
	public ResponseEntity<List<CommentDto>> list(Integer bno) {
		List<CommentDto> list = null;
		try {
			list = service.getList(bno);
			return new ResponseEntity<List<CommentDto>>(list, HttpStatus.OK); // 200
		} catch (Exception e) {
			e.printStackTrace();
			return new ResponseEntity<List<CommentDto>>(HttpStatus.BAD_REQUEST); // 400
		}
	}
}
